language: generic
dist: trusty
sudo: required
jdk: oraclejdk8

before_cache:
- rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/

os:
- linux
- osx

env:
  global:
  - SYS=25 ABI="google_apis;armeabi-v7a"
  - ANDROID_API=28
  - EMULATOR_API=25
  - ANDROID_BUILD_TOOLS=28.0.3
  - ANDROID_TAG=google_apis
  - ADB_INSTALL_TIMEOUT=5 # minutes
  - AVD_NAME=test


#android:
#  components:
#  - tools
#  - platform-tools
#  - build-tools-$ANDROID_BUILD_TOOLS
#  - android-$ANDROID_API
#  - android-$EMULATOR_API
#  - extra-google-m2repository
#  - extra-android-m2repository # for design library
#  - addon-google_apis-google-25 # google play services
#  - sys-img-armeabi-v7a-addon-google_apis-google-$ANDROID_API
#  - sys-img-armeabi-v7a-addon-google_apis-google-$EMULATOR_API
#  licenses:
#  - android-sdk-preview-license-.+
#  - android-sdk-license-.+
#  - google-gdk-license-.+

# safelist
branches:
  only:
  - master
  - develop

before_install:
# Install the Android SDK Dependency.
- export ANDROID_HOME=~/android-sdk-linux
- if [ $TRAVIS_OS_NAME == "osx" ]; then wget -q "https://dl.google.com/android/repository/sdk-tools-darwin-4333796.zip" -O android-sdk-tools.zip; else wget -q "https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip" -O android-sdk-tools.zip; fi
#  - wget -q "https://dl.google.com/android/repository/sdk-tools-${OS}-4333796.zip" -O android-sdk-tools.zip
- unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
- rm android-sdk-tools.zip
- PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
# Silence warning.
- mkdir -p ~/.android
- touch ~/.android/repositories.cfg
- HOMEBREW_NO_AUTO_UPDATE=1
- if [ $TRAVIS_OS_NAME == "osx" ]; then brew cask uninstall java; brew tap caskroom/versions; brew cask install java8; fi
# Accept licenses before installing components, no need to echo y for each component
- yes | sdkmanager --licenses
# Platform tools
- echo yes | sdkmanager "emulator" "tools" "platform-tools" > /dev/null
- sdkmanager --list | head -15
# install older packages (for emulator)
- sdkmanager "build-tools;25.0.2" "platforms;android-25" > /dev/null
# Create and start emulator.
- sdkmanager "system-images;android-$SYS;$ABI" > /dev/null
- sdkmanager --list | head -15
- echo no | avdmanager create avd --force -n test -k "system-images;android-$SYS;$ABI"
# fix timezone warning
- if [ $TRAVIS_OS_NAME == "osx" ]; then sudo ln -sf /usr/share/zoneinfo/US/Pacific /etc/localtime; fi
# use the absolute emulator path in case older version installed (on default path)
- $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader &
before_script:
# Wait for emulator to startup.
- ./scripts/android-wait-for-emulator.sh
- adb shell input keyevent 82
- chmod +x gradlew
- ./gradlew dependencies || true

script:
- echo "DONE. "
- "./gradlew clean build connectedCheck -PdisablePreDex --stacktrace"