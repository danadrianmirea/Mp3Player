apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'com.github.ben-manes.versions'

android {
    def PIE = 28
    def OREO = 26
    def MARSHMALLOW = 23
    def BUILD_TOOLS_VERSION = '28.0.3'

    compileSdkVersion PIE
	buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.example.mike.mp3player"
        minSdkVersion MARSHMALLOW
        targetSdkVersion OREO
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    adbOptions {
        timeOutInMs 20 * 60 * 1000 // 10 minutes
    }

    buildTypes {
        release {
            testCoverageEnabled = true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }
    flavorDimensions "version"
    productFlavors {
        full {
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
            resValue "string", "app_name", "MP3 Player"
        }
        automation {
            applicationIdSuffix ".automation"
            versionNameSuffix "-automation"
            resValue "string", "app_name", "Test Mp3 Player"

        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
            jacoco {
                includeNoLocationClasses=true
            }
        }
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
        disable 'PrivateResource'
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencyUpdates {
    checkForGradleUpdate = true
    resolutionStrategy {
        componentSelection { rules ->
            rules.all { ComponentSelection selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject('Release candidate')
                }
            }
        }
    }
}

dependencies {
    def CONSTRAINT_LAYOUT_VERSION = '2.0.0-alpha2'
    def MATERIAL_VERSION = '1.1.0-alpha05'
    def GRID_LAYOUT_VERSION = '1.0.0'
    def CORE_VERSION = '1.0.1'
    def MEDIA_VERSION = '1.1.0-alpha02'
    def ANNOTATION_VERSION = '1.1.0-rc01'
    def APP_COMPAT_VERSION = '1.0.2'
    def DRAWER_LAYOUT_VERSION = '1.0.0'
    def COMMONS_IO_VERSION = '2.6'
    def COMMONS_LANG_VERSION = '2.6'
    def COMMONS_COLLECTIONS4_VERSION = '4.3'
    def MOCKITO_CORE_VERSION = '2.27.0'
    def POWERMOCK_JUNIT4_VERSION = '2.0.0'
    def JUNIT4_VERSION = '4.12'
    def JUNIT5_VERSION = '5.4.1'
    def JUINT_EXT_VERSION = '1.1.0'
    def POWERMOCKITO_CORE_VERSION = '2.0.0'
    def POWERMOCKITO_API_VERSION = '2.0.0'
    def ROBOELECTRIC_VERSION = '4.2.1'
    def TEST_CORE_VERSION = '1.2.0-alpha03'
    def TEST_RUNNER_VERSION = '1.0.2'
    def TEST_RULES_VERSION = '1.1.1'
    def ESPRESSO_CORE_VERSION = '3.1.0'
    def GOOGLE_GUAVA_VERSION = '27.1-android'
    def TEST_UI_AUTOMATOR_VERSION= '2.2.0'
    def FRAGMENT_TESTING_VERSION = '1.1.0-alpha07'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation group: 'androidx.constraintlayout', name: 'constraintlayout', version: CONSTRAINT_LAYOUT_VERSION
    implementation group: 'com.google.android.material', name: 'material', version: MATERIAL_VERSION
    implementation group: 'androidx.gridlayout', name: 'gridlayout', version: GRID_LAYOUT_VERSION
    implementation group: 'androidx.media', name: 'media', version: MEDIA_VERSION
    implementation group: 'androidx.annotation', name: 'annotation', version: ANNOTATION_VERSION
    debugImplementation group: 'androidx.appcompat', name: 'appcompat', version: APP_COMPAT_VERSION
    implementation group: 'androidx.drawerlayout', name: 'drawerlayout', version: DRAWER_LAYOUT_VERSION
    implementation group: 'androidx.core', name: 'core', version: CORE_VERSION
    implementation group: 'commons-io', name: 'commons-io', version: COMMONS_IO_VERSION
    implementation group: 'commons-lang', name: 'commons-lang', version: COMMONS_LANG_VERSION
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: COMMONS_COLLECTIONS4_VERSION
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: GOOGLE_GUAVA_VERSION
    implementation group: 'androidx.test', name: 'core', version: TEST_CORE_VERSION

    implementation 'com.google.dagger:dagger:2.10'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.10'

    //vintage
    testImplementation group: 'junit', name: 'junit', version: JUNIT4_VERSION
    // (Optional) If you also have JUnit 4-based tests
    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: JUNIT5_VERSION
    // jupiter
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: JUNIT5_VERSION
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: JUNIT5_VERSION
    //testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.25.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: MOCKITO_CORE_VERSION
    testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: POWERMOCK_JUNIT4_VERSION
    testImplementation group: 'org.powermock', name: 'powermock-core', version: POWERMOCKITO_CORE_VERSION
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: POWERMOCKITO_API_VERSION
    testImplementation group: 'androidx.appcompat', name: 'appcompat', version: APP_COMPAT_VERSION
    testImplementation group: 'org.robolectric', name: 'robolectric', version: ROBOELECTRIC_VERSION

    debugImplementation group: 'androidx.fragment', name: 'fragment-testing', version: FRAGMENT_TESTING_VERSION
    androidTestImplementation group: 'androidx.test', name: 'core', version: TEST_CORE_VERSION
    androidTestImplementation group: 'androidx.annotation', name: 'annotation', version: ANNOTATION_VERSION
    androidTestImplementation group: 'androidx.test.ext', name: 'junit', version: JUINT_EXT_VERSION
    androidTestImplementation group: 'androidx.test', name: 'rules', version: TEST_RULES_VERSION
    androidTestImplementation group: 'androidx.test', name: 'runner', version: TEST_RUNNER_VERSION

    androidTestImplementation(group: 'androidx.test.espresso', name: 'espresso-core', version: ESPRESSO_CORE_VERSION) {
        exclude module: "support-annotations"
    }
    androidTestImplementation group: 'androidx.test.uiautomator', name: 'uiautomator', version: TEST_UI_AUTOMATOR_VERSION
}