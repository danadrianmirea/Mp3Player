name: Master Build, Test and Release Workflow
on:
  push:
    branches:
      - master
env:
  SHOULD_RELEASE_TO_PLAYSTORE: false
jobs:
  master-build-and-test:
    permissions:
      contents: 'read'
      id-token: 'write'
    environment: release_env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3.6.0
        with:
          distribution: corretto
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v3.0.11
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle


      - name: Cache SonarCloud packages
        uses: actions/cache@v3.0.11
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Gradle Clean
        run: ./gradlew clean

      - name: Assemble debug and androidTest APKs
        run: ./gradlew assembleDebug assembleAndroidTest

      - id: 'auth'
        uses: google-github-actions/auth@v1.0.0
        with:
          credentials_json: ${{ secrets.RELEASE_SERVICE_ACCOUNT_JSON }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1.0.1

      - name: Run firebase tests on gcloud and pull coverage data
        run: |
          BUCKET_ID=pw30jhrbi15pc-ywxmz0rw1n8wa/2021-01-25_23:18:57.486170_Stvb
          echo $BUCKET_ID
          TEST_OUTPUT_FOLDER=${{ github.workspace }}/client
          echo $TEST_OUTPUT_FOLDER
          gsutil -m cp -R -U gs://test-lab-$BUCKET_ID/**/sdcard/coverage.ec $TEST_OUTPUT_FOLDER || true
          GCLOUD_OUTPUT_LOG=gcloudLog.txt
          gcloud firebase test android run ${{github.workspace}}/.github/workflows/arguments/firebase-testlab-arguments.yml:client-ui-tests \
            --app ${{ github.workspace }}/app/build/outputs/apk/full/debug/app-full-debug.apk \
            --test ${{ github.workspace }}/client/build/outputs/apk/androidTest/full/debug/client-full-debug-androidTest.apk \
            --type instrumentation \
            --app ${{ github.workspace }}/app/build/outputs/apk/full/debug/app-full-debug.apk \
            --test ${{ github.workspace }}/client/build/outputs/apk/androidTest/full/debug/client-full-debug-androidTest.apk \
            --environment-variables coverage=true,coverageFile=/sdcard/coverage.ec \
            --device model=Pixel2,version=29,locale=en,orientation=portrait \
            --directories-to-pull /sdcard \
            --no-record-video \
             | tee $GCLOUD_OUTPUT_LOG
          BUCKET_ID=`cat $GCLOUD_OUTPUT_LOG | sed -n -E 's#^.+test-lab-(.+)/.+#\1#p'`


      - name: Grab remote reports and arifacts and store locally
        run: gsutil -m cp -R -U gs://test-lab-$BUCKET_ID/**/sdcard/coverage.ec $TEST_OUTPUT_FOLDER || true

      - name: Gradle and create Debug test report
        run: ./gradlew createDebugUnitTestCoverageReport
      - name: Gradle and create FullDebug test report
        run: ./gradlew createFullDebugUnitTestCoverageReport
      - name: Run Lint
        run: ./gradlew lint
      - name: Run Sonar
        run: ./gradlew sonar --info --stacktrace
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  semantic-release:
    needs: [ master-build-and-test ]
    uses: ./.github/workflows/github-semantic-release.yml
    # Secrets for the env, declared in reusuable workflow must be "declared" in the parent file
    # See: https://github.com/orgs/community/discussions/25238
    secrets:
      SEMANTIC_RELEASE_FINE_GRAINED_TOKEN: ${{ secrets.SEMANTIC_RELEASE_FINE_GRAINED_TOKEN }}

  release-to-playstore:
    needs: [ semantic-release ] # needs semantic release so that the versions are incremented
    if: needs.semantic-release.outputs.performed_release == 'true'
    uses: ./.github/workflows/google-play-store-release.yml
    secrets:
      KEY_STORE_BASE64: ${{ secrets.KEY_STORE_BASE64 }}
      KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      RELEASE_SERVICE_ACCOUNT_JSON: ${{ secrets.RELEASE_SERVICE_ACCOUNT_JSON }}