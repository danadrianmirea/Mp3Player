name: Develop Check Run Completed Workflow
on:
  check_run:
    types: [completed]
    branches:
      - master

jobs:
  merge-to-master-checker:
    runs-on: ubuntu-latest
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
      QUALITY_GATE_PASSED: 0
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Dump GitHub context into event.json
        run: echo $GITHUB_CONTEXT | tee event.json;

      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install Python dependencies - PyGithub
        run: pip install PyGithub
      - name: Install Python dependencies - pyjavaproperties
        run: pip install pyjavaproperties
      - name: Make bump_versions.py executable
        run: chmod +x ./.github/ci-scripts/release/bump_versions.py
      - name: Make quality_gate_check.py executable
        run: chmod +x ./.github/ci-scripts/quality_gate_check.py
      - name: Check Sonar Quality Gate
        run: echo "QUALITY_GATE_PASSED=$(python3 .github/ci-scripts/quality_gate_check.py event.json | tail -1)" >> $GITHUB_ENV ;

      - name: Setup Node.js
        if: ${{ env.QUALITY_GATE_PASSED }}
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Node.js dependencies
        if: ${{ env.QUALITY_GATE_PASSED }}
        run: npm ci

      - name: Release
        if: ${{ env.QUALITY_GATE_PASSED }}
        env:
          GIT_AUTHOR_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_RELEASE_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_RELEASE_EMAIL }}
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
        run: npx semantic-release --ci
