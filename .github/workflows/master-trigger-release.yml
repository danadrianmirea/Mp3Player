name: Master Check Run Completed Workflow
on:
  workflow_dispatch:
  check_run:
    types: [completed]
    branches:
      - master

env:
  IS_MASTER: false
  QUALITY_GATE_PASSED: false
  SHOULD_RELEASE_TO_PLAYSTORE: false

jobs:
  sonar-quality-gate-check:
    runs-on: ubuntu-latest
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    outputs:
      QUALITY_GATE_PASSED: ${{ steps.quality-check.outputs.QUALITY_GATE_PASSED }}
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Dump GitHub context into event.json
        run: echo $GITHUB_CONTEXT | tee event.json;

      - name: Set up Python 3.9
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.9

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Python dependencies - PyGithub
        run: pip install PyGithub

      - name: Make quality_gate_check.py executable
        run: chmod +x ./.github/ci-scripts/quality_gate_check.py

      - id: 'quality-check'
        name: Check Sonar Quality Gate
        run: |
          quality_output = python3 .github/ci-scripts/quality_gate_check.py event.json | tail -1
          echo "QUALITY_GATE_PASSED=${quality_output}" >> $GITHUB_OUTPUT ;

  semantic-release:
    needs: [sonar-quality-gate-check]
    if: needs.sonar-quality-gate-check.outputs.QUALITY_GATE_PASSED == '1'
    uses: ./.github/workflows/github-semantic-release.yml
    # Secrets for the env, declared in reusuable workflow must be "declared" in the parent file
    # See: https://github.com/orgs/community/discussions/25238
    secrets:
      SEMANTIC_RELEASE_FINE_GRAINED_TOKEN: ${{ secrets.SEMANTIC_RELEASE_FINE_GRAINED_TOKEN }}

  release-to-playstore:
    needs: [semantic-release] # needs semantic release so that the versions are incremented
    if: needs.semantic-release.outputs.SHOULD_RELEASE_TO_PLAYSTORE == 'true'
    uses: ./.github/workflows/google-play-store-release.yml
    secrets:
      KEY_STORE_BASE64: ${{ secrets.KEY_STORE_BASE64 }}
      KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      RELEASE_SERVICE_ACCOUNT_JSON: ${{ secrets.RELEASE_SERVICE_ACCOUNT_JSON }}
