apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'jacoco'

jacoco {
    toolVersion = JACOCO_VERSION
}


tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$[0-9].*'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/kotlin"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
    ])
}

android {
    compileSdkVersion TARGET_SDK_VERION
    buildToolsVersion BUILD_TOOLS_VERSION


    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERION
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            testCoverageEnabled = true
        }
    }
    flavorDimensions 'default'
    productFlavors {
        full {
            dimension = 'default'
        }
        automation {
            dimension = 'default'
        }
    }

    compileOptions {
        incremental = false
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions { jvmTarget = "1.8" }


    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    implementation group: 'com.l4digital.fastscroll', name: 'fastscroll', version: FAST_SCROLL_VERSION
    implementation group: 'androidx.fragment', name: 'fragment', version: FRAGMENT_VERSION
    implementation group: 'androidx.drawerlayout', name: 'drawerlayout', version: DRAWER_LAYOUT_VERSION
    implementation group: 'androidx.coordinatorlayout', name: 'coordinatorlayout', version: COORDINATOR_LAYOUT_VERSION
    implementation group: 'androidx.annotation', name: 'annotation', version: ANNOTATION_VERSION
    implementation group: 'org.apache.commons', name: 'commons-io', version: COMMONS_IO_VERSION
    implementation group: 'androidx.constraintlayout', name: 'constraintlayout', version: CONSTRAINT_LAYOUT_VERSION
    implementation group: 'com.google.android.material', name: 'material', version: MATERIAL_VERSION
    implementation group: 'androidx.gridlayout', name: 'gridlayout', version: GRID_LAYOUT_VERSION
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: KOTLIN_COROUTINE_VERSION
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-android', version: KOTLIN_COROUTINE_VERSION
    implementation group: 'androidx.appcompat', name: 'appcompat', version: APP_COMPAT_VERSION
    implementation group: 'androidx.core', name: 'core-ktx', version: ANDROIDX_CORE_KOTLIN_VERSION
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: COMMONS_COLLECTIONS4_VERSION
    implementation group: 'com.google.guava', name: 'guava', version: GOOGLE_GUAVA_VERSION
    implementation group: 'androidx.media', name: 'media', version: MEDIA_VERSION
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: COMMONS_LANG_VERSION
    implementation group: 'androidx.viewpager2', name: 'viewpager2', version: VIEW_PAGER2_VERSION
    implementation group: 'androidx.recyclerview', name: 'recyclerview', version: RECYCLER_VIEW_VERSION
    implementation group: 'androidx.core', name: 'core', version: CORE_VERSION
    implementation group: 'androidx.fragment', name: 'fragment-testing', version: FRAGMENT_VERSION
    implementation project(path: ':commons')

    // Glide
    implementation group: 'com.github.bumptech.glide', name: 'glide', version: GLIDE_VERSION
    implementation ("com.github.bumptech.glide:recyclerview-integration:$GLIDE_VERSION") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }


    kapt group: 'com.google.dagger', name: 'dagger-compiler', version: DAGGER_VERSION
    kaptTest group: 'com.google.dagger', name: 'dagger-compiler', version: DAGGER_VERSION
    implementation group: 'com.google.dagger', name: 'dagger', version: DAGGER_VERSION
    implementation project(path: ':commons')


    // vintage
    testImplementation group: 'junit', name: 'junit', version: JUNIT4_VERSION
    // (Optional) If you also have JUnit 4-based tests
    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: JUNIT5_VERSION
    // jupiter
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: JUNIT5_VERSION
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: JUNIT5_VERSION



    testImplementation project(":client:testsupport")
    testImplementation group: 'org.robolectric', name: 'robolectric', version: ROBOLECTRIC_VERSION// https://mvnrepository.com/artifact/org.robolectric/shadows-support-v4
    testImplementation group: 'org.robolectric', name: 'shadows-supportv4', version: ROBOLECTRIC_VERSION
    testImplementation group: 'com.nhaarman.mockitokotlin2', name: 'mockito-kotlin', version: MOCKITO_KOTLIN
    implementation group: 'androidx.test', name: 'core', version: TEST_CORE_VERSION

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
